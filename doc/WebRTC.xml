<?xml version="1.0"?>
<?xml-stylesheet href="docbook.xsl" type="text/xsl" ?>
<book xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="book_rxt_v12_v5b">
  <info>
    <title>WebRTC Specification</title>
    <titleabbrev>WebRTC</titleabbrev>
    <releaseinfo>22.12</releaseinfo>
    <author>
      <orgname>ONVIF™</orgname>
      <uri>www.onvif.org</uri>
    </author>
    <pubdate> December, 2022</pubdate>
    <mediaobject>
      <imageobject>
        <imagedata fileref="media/logo.png" contentwidth="60mm"/>
      </imageobject>
    </mediaobject>
    <copyright>
      <year>2008-2022</year>
      <holder>ONVIF™ All rights reserved.</holder>
    </copyright>
    <legalnotice>
      <para>Recipients of this document may copy, distribute, publish, or display this document so
        long as this copyright notice, license and disclaimer are retained with all copies of the
        document. No license is granted to modify this document.</para>
      <para>THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR
        AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT
        LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE,
        NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY PURPOSE;
        OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS, COPYRIGHTS,
        TRADEMARKS OR OTHER RIGHTS.</para>
      <para>IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR ANY
        DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES, ARISING OUT OF OR
        RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR NOT (1) THE CORPORATION,
        MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES, OR (2)
        SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND ARISING OUT OF OR RELATING TO ANY USE OR
        DISTRIBUTION OF THIS DOCUMENT. THE FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT
        APPLY TO, INVALIDATE, OR LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR
        RESPECTIVE AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF
        THE CORPORATION.</para>
    </legalnotice>
    <revhistory>
      <revision>
        <revnumber>22.12</revnumber>
        <date>Dec 2022</date>
        <author>
          <personname>Fredrik Svensson, Jonas Cremon</personname>
        </author>
        <revremark>First release</revremark>
      </revision>
    </revhistory>
  </info>
  <chapter xml:id="chapter_txt_v12_v5b">
    <title>Scope </title>
    <para>This document defines how WebRTC and related protocols are to be used for ONVIF clients
      and devices to establish a peer-to-peer connection between a client and a device using a
      signaling server.</para>
  </chapter>
  <chapter xml:id="chapter_uxt_v12_v5b">
    <title>Normative references</title>
    <para>W3C WebRTC Specification: Real-Time Communication Between Browsers</para>
    <para role="reference">&lt;<link xmlns:xlink="http://www.w3.org/1999/xlink"
        xlink:href="https://www.w3.org/TR/webrtc/"/>&gt;</para>
    <para>IETF RFC 6455 - The WebSocket Protocol</para>
    <para role="reference">&lt;<link xmlns:xlink="http://www.w3.org/1999/xlink"
      xlink:href="http://tools.ietf.org/html/rfc6455"/>&gt;</para>
    <para>IETF RFC 8829 - JavaScript Session Establishment Protocol (JSEP)</para>
    <para role="reference">&lt;<link xmlns:xlink="http://www.w3.org/1999/xlink"
        xlink:href="http://tools.ietf.org/html/rfc8829"/>&gt;</para>
    <para>IETF RFC 5245 - Interactive Connectivity Establishment (ICE)</para>
    <para role="reference">&lt;<link xmlns:xlink="http://www.w3.org/1999/xlink"
        xlink:href="http://tools.ietf.org/html/rfc5245"/>&gt;</para>
    <para>IETF RFC 8866 - SDP: Session Description Protocol</para>
    <para role="reference">&lt;<link xmlns:xlink="http://www.w3.org/1999/xlink"
        xlink:href="http://tools.ietf.org/html/rfc8866"/>&gt;</para>
    <para>IETF RFC 8489 - Session Traversal Utilities for NAT (STUN)</para>
    <para role="reference">&lt;<link xmlns:xlink="http://www.w3.org/1999/xlink"
        xlink:href="http://tools.ietf.org/html/rfc8489"/>&gt;</para>
    <para>IETF RFC 8656 - Traversal Using Relays around NAT (TURN)</para>
    <para role="reference">&lt;<link xmlns:xlink="http://www.w3.org/1999/xlink"
        xlink:href="http://tools.ietf.org/html/rfc8856"/>&gt;</para>
  </chapter>
  <chapter xml:id="chapter_vxt_v12_v5b">
    <title>Terms and Definitions</title>
    <section xml:id="section_wxt_v12_v5b">
      <title>Definitions</title>
      <informaltable>
        <tgroup cols="2">
          <colspec colname="c1" colwidth="24*"/>
          <colspec colname="c2" colwidth="76*"/>
          <tbody valign="top">
            <row>
              <entry align="left">
                <para>
                  <emphasis role="bold">Signaling Server</emphasis>
                </para>
              </entry>
              <entry align="left">
                <para>A server that manages the WebRTC connections between clients and
                  devices.</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section xml:id="section_xxt_v12_v5b">
      <title>Abbreviations</title>
      <informaltable>
        <tgroup cols="2">
          <colspec colname="c1" colwidth="24*"/>
          <colspec colname="c2" colwidth="76*"/>
          <tbody valign="top">
            <row>
              <entry valign="middle">
                <para>ICE</para>
              </entry>
              <entry valign="middle">
                <para>Interactive Connectivity Establishment</para>
              </entry>
            </row>
            <row>
              <entry valign="middle">
                <para>NAT</para>
              </entry>
              <entry valign="middle">
                <para>Network Address Translation</para>
              </entry>
            </row>
            <row>
              <entry valign="middle">
                <para>P2P</para>
              </entry>
              <entry valign="middle">
                <para>Peer-to-peer</para>
              </entry>
            </row>
            <row>
              <entry valign="middle">
                <para>SDP</para>
              </entry>
              <entry valign="middle">
                <para>Session Description Protocol</para>
              </entry>
            </row>
            <row>
              <entry valign="middle">
                <para>STUN</para>
              </entry>
              <entry valign="middle">
                <para>Session Traversal Utilities for NAT</para>
              </entry>
            </row>
            <row>
              <entry valign="middle">
                <para>TURN</para>
              </entry>
              <entry valign="middle">
                <para>Traversal Using Relays around NAT</para>
              </entry>
            </row>
            <row>
              <entry valign="middle">
                <para>WebRTC</para>
              </entry>
              <entry valign="middle">
                <para>Web Real-Time Communication</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
  </chapter>
  <chapter xml:id="chapter_yxt_v12_v5b">
    <title>Overview</title>
    <para>This specification contains documentation and examples of the signaling protocol used to
      set up a WebRTC peer-to-peer connection. The setup involves three participants: <emphasis
        role="italic">client</emphasis>, <emphasis role="italic">device</emphasis> and <emphasis
        role="italic">signaling server</emphasis>.</para>
    <figure xml:id="_Ref493258796">
      <title>Client, device, signaling server</title>
      <mediaobject>
        <imageobject>
          <imagedata fileref="media/WebRTC/client_device_server_triangle.png"
            contentwidth="158.75mm"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>In this figure,<itemizedlist>
        <listitem>
          <para>The <emphasis role="italic">client</emphasis> represents a real user who initiates
            the WebRTC session.</para>
        </listitem>
        <listitem>
          <para>The <emphasis role="italic">device</emphasis> is the resource delivering the media,
            for example a camera.</para>
        </listitem>
        <listitem>
          <para>The <emphasis role="italic">signaling server</emphasis> is the mediator that both
              <emphasis role="italic">client</emphasis> and <emphasis role="italic"
              >device</emphasis> connect to in order to establish a peer-to-peer connection between
            them.</para>
        </listitem>
      </itemizedlist></para>
    <para>The <emphasis>Signaling Protocol</emphasis> described in this specification details the
      data exchange between client and device via the signaling server. The formal API
      is defined in separate JSON schema files.</para>
    <para>Once a peer-to-peer connection has been established, how WebRTC is used is described in the
      WebRTC usage chapter.</para>
  </chapter>
  <chapter xml:id="chapter_zxt_v12_v5b">
    <title>Signaling Protocol</title>
    <para>The <emphasis role="italic">Signaling Protocol</emphasis> defines the messages between a
        <emphasis role="italic">client</emphasis> and a <emphasis role="italic">device</emphasis> in
      a WebRTC system. The messages are always sent via the <emphasis>signaling server</emphasis>
      called <emphasis>server</emphasis> from now on.</para>
    <figure xml:id="_Ref493258797">
      <title>Signaling flow sequence diagram</title>
      <mediaobject>
        <imageobject>
          <imagedata fileref="media/WebRTC/webrtc_signaling_flow.svg" contentwidth="160mm"/>
        </imageobject>
      </mediaobject>
    </figure>
    <section xml:id="section_ayt_v12_v5b">
      <title>Connecting to the signaling server</title>
      <para>A client first needs to connect to the server, by setting up a WebSocket to, for
        example, the URL:</para>
      <programlisting>https://signaling.example.com/client?authorization=Bearer%20access_token</programlisting>
      <para>where <code>signaling.example.com</code> should be replaced with the server's address,
        and <code>access_token</code> should be replaced with a valid access token that the server
        will accept. See section <xref linkend="chapter_cwp_r2k_v5b"/> for how to get an access
        token.</para>
      <para>The connection handling is done using WebSocket [RFC 6455]. The WebSocket sub protocol
        defined by this specification is identified with 'client.webrtc.onvif.org'.</para>
      <para>The signaling messages are then sent as JSON text messages in the WebSocket.</para>
      <section>
        <title>hello</title>
        <para>Directly after connecting a WebSocket to the server the client typically gets a hello
          message from the server, with the client's assigned signaling id. Note that this ID is not
          directly used in the Signaling Protocol.</para>
        <para><emphasis role="bold">Client opens a WebSocket connection to server</emphasis></para>
        <para><emphasis role="bold">Server sends <code>hello</code> to client</emphasis></para>
      </section>
      <section>
        <title>Faults</title>
        <para>For the WebSocket connection see [RFC 6455]. After the WebSocket is successfully
          connected, the server may send errors using its own <code>error</code> type message. See
          section <xref linkend="section_myt_v12_v5b"/> for more info on error handling.</para>
        </section>
    </section>
    <section xml:id="section_byt_v12_v5b">
      <title>Message structure</title>
      <para><?oxy_comment_start author="FredrikS" timestamp="20220920T174145+0200" comment="Can we use a tool like OpenAPI to describe the protocol? AsyncAPI"?>The
        messages shown in this chapter are sent as JSON text messages over the WebSocket
        connection<?oxy_comment_end?>. Generally a message contains two parts; the first part is
        processed by the server and the second part is intended for the device.
        <?oxy_comment_start author="karinh" timestamp="20221027T104510+0200" comment="Mention something about payload/header instead?"?>So
        in essence device bound messages and responses are encapsulated in the <code>data</code>
        field of the first part.</para><?oxy_comment_end?>
      <para>
        <note>
          <para>Note that messages sent via the server may be delivered out-of-order; for optimal
            scalability messages should be handled asynchronously.</para>
        </note>
      </para>
      <para>Below are explanations for some of the key/value pairs that are seen repeatedly.</para>
      <section xml:id="section_cyt_v12_v5b">
        <title><?oxy_comment_start author="FredrikS" timestamp="20220920T174918+0200" comment="Add key for api version on this level as well?"?>Top
          level keys<?oxy_comment_end?></title>
        <para>
          <informaltable>
            <tgroup cols="2">
              <colspec colnum="1" colname="c1" colwidth="1*"/>
              <colspec colnum="2" colname="c2" colwidth="3.55*"/>
              <tbody>
                <row>
                  <entry>
                    <para><emphasis role="bold">Key</emphasis></para>
                  </entry>
                  <entry>
                    <para><emphasis role="bold">Description</emphasis></para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>type</para>
                  </entry>
                  <entry>
                    <para>Can be "hello", "initSession", "signaling" or "error"</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>targetId</para>
                  </entry>
                  <entry>
                    <para xml:id="para_wff_512_v5b">The ID of the intended device, or the device
                      that sent the message. This ID is unique within the organization. See section
                        <xref linkend="chapter_ryt_v12_v5b"/> for how to get available IDs.</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>orgId</para>
                  </entry>
                  <entry>
                    <para>The related organization's ID. This ID is unique within the directory
                      server. See section <xref linkend="chapter_ryt_v12_v5b"/> for how to get
                      available IDs.</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>accessToken</para>
                  </entry>
                  <entry>
                    <para>Client's access token that allows signaling. See section <xref
                        linkend="chapter_cwp_r2k_v5b"/> for how to get an access token.</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>correlationId</para>
                  </entry>
                  <entry>
                    <para>Optional value that may be useful for logging and debugging</para>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </para>
      </section>
      <section xml:id="section_ozx_512_v5b">
        <title>Device level keys inside data blocks</title>
        <para>
          <informaltable>
            <tgroup cols="2">
              <colspec colnum="1" colname="c1" colwidth="1*"/>
              <colspec colnum="2" colname="c2" colwidth="3.76*"/>
              <tbody>
                <row>
                  <entry>
                    <para><emphasis role="bold">Key</emphasis></para>
                  </entry>
                  <entry>
                    <para><emphasis role="bold">Description</emphasis></para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>apiVersion</para>
                  </entry>
                  <entry>
                    <para>API version</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>type</para>
                  </entry>
                  <entry>
                    <para>Can be "request" or "response"</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>sessionId</para>
                  </entry>
                  <entry>
                    <para><?oxy_comment_start author="FredrikS" timestamp="20220920T181115+0200" comment="Explain why this is generated by the client"?>Value
                      chosen by client to identify the p2p session, so that different sessions can
                      exist between the same client and device</para><?oxy_comment_end?>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>method</para>
                  </entry>
                  <entry>
                    <para>Function of the message</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>params</para>
                  </entry>
                  <entry>
                    <para>Parameters related to the method</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>context</para>
                  </entry>
                  <entry>
                    <para>Optional value that, if present in a request, should be included in the
                      corresponding response</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>id</para>
                  </entry>
                  <entry>
                    <para>Optional message counter, for debugging</para>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </para>
      </section>
      <section xml:id="section_dyt_v12_v5b">
        <title>Param level keys inside params blocks</title>
        <para>
          <informaltable>
            <tgroup cols="2">
              <colspec colnum="1" colname="c1" colwidth="1*"/>
              <colspec colnum="2" colname="c2" colwidth="4*"/>
              <tbody>
                <row>
                  <entry>
                    <para><emphasis role="bold">Key</emphasis></para>
                  </entry>
                  <entry>
                    <para><emphasis role="bold">Description</emphasis></para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>type</para>
                  </entry>
                  <entry>
                    <para>Sub function of the method </para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>profile</para>
                  </entry>
                  <entry>
                    <para>Media profile. See section <xref linkend="chapter_ryt_v12_v5b"/> for how
                      to get available profiles.</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>sdp</para>
                  </entry>
                  <entry>
                    <para>SDP record offer</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>candidate</para>
                  </entry>
                  <entry>
                    <para>ICE candidate</para>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </para>
      </section>
    </section>
    <section xml:id="section_eyt_v12_v5b">
      <title>Initialize a new WebRTC session</title>
      <para>A new WebRTC session is initiated by the client requesting the device to produce an SDP
        offer using an <code>initSession</code> message.</para>
      <section xml:id="section_fyt_v12_v5b">
        <title>initSession</title>
        <para><emphasis role="bold">Client sends <code>initSession</code> to server</emphasis></para>
        <para>An <code>initSession</code> message is sent from the client to the signaling server to
          request a new WebRTC session to a device. The requested properties of the session
          are passed in the params property in the payload. A message of type <code>live</code>
          should be used to request a live video and/or audio session.</para>
        <para><emphasis role="bold">Server sends <code>initSessionResponse</code> to client</emphasis></para>
        <para>The server responds with a copy of the <code>initSession</code> message,
          including details for the STUN and TURN servers that can be used.</para>
        <para><emphasis role="bold">Server sends <code>initSession</code> to device</emphasis></para>
        <para><emphasis role="bold">Device sends <code>initSessionAck</code> to client, via server</emphasis></para>
        <para>The device acknowledges that it has received an <code>initSession</code>
          message.</para>
        <section>
          <title>Faults</title>
          <para>The following errors can be set in the <code>initSession</code> messages.
            The server may also send errors using its own <code>error</code> type message.
            See section <xref linkend="section_myt_v12_v5b"/> for more details on errors.</para>
        <informaltable>
          <tgroup cols="2">
            <colspec colnum="1" colname="col1" colwidth="1*"/>
            <colspec colnum="2" colname="col2" colwidth="4*"/>
            <thead>
              <row>
                <entry>
                  <para>Code</para>
                </entry>
                <entry>
                  <para>Description</para>
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  <para>1100</para>
                </entry>
                <entry>
                  <para>Internal error</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>1101</para>
                </entry>
                <entry>
                  <para>Temporarily unavailable</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>2100</para>
                </entry>
                <entry>
                  <para>API version not supported</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>2101</para>
                </entry>
                <entry>
                  <para>Invalid JSON</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>2102</para>
                </entry>
                <entry>
                  <para>Method not supported</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>2103</para>
                </entry>
                <entry>
                  <para>Required parameter missing</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>2104</para>
                </entry>
                <entry>
                  <para>Invalid parameter value specified</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>2105</para>
                </entry>
                <entry>
                  <para>Authorization failed</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>2106</para>
                </entry>
                <entry>
                  <para>Authentication failed</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable></section>
      </section>
    </section>
    <section xml:id="section_gyt_v12_v5b">
      <title>SDP and ICE candidate negotiation</title>
      <para>Once a P2P signaling channel has been set up using the <code>initSession</code> message
        the next step is to exchange SDP and ICE candidates. The dynamics and the format of the SDP
        and ICE candidate strings are defined in RFC 8829.</para>
      <section xml:id="section_hyt_v12_v5b">
        <title>SDP offer</title>
        <para>An SDP offer is always sent from the device to the client. Note that the contents of
            <code>params</code> map directly to the contents of the
            <code>RTCSessionDescription</code> interface described in the W3C WebRTC
          Specification.</para>
        <para><emphasis role="bold">Device sends <code>setSdpOffer</code> to client, via server</emphasis></para>
        <para>This message is an SDP offer sent from the device to the client as a result of an <code>initSession</code> being sent from the client.</para>
        <para><emphasis role="bold">[Optional] Client sends <code>setSdpOfferAck</code> to device, via server</emphasis></para>
        <para>The client MAY acknowledge the received SDP offer with a response after validating the
          message. Altough this is not strictly necessary it can be helpful to send these
          acknowledgements to ease debugging the signaling flow. </para>
        <section>
          <title>Faults</title>
          <para>The following errors can be set in the <code>setSdpOfferAck</code> response message.
            See section <xref linkend="section_myt_v12_v5b"/> for more details on errors.</para>
          <informaltable>
            <tgroup cols="2">
              <colspec colnum="1" colname="col1" colwidth="1*"/>
              <colspec colnum="2" colname="col2" colwidth="4*"/>
              <thead>
                <row>
                  <entry>
                    <para>Code</para>
                  </entry>
                  <entry>
                    <para>Description</para>
                  </entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry>
                    <para>1100</para>
                  </entry>
                  <entry>
                    <para>Internal error</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>1101</para>
                  </entry>
                  <entry>
                    <para>Temporarily unavailable</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>2100</para>
                  </entry>
                  <entry>
                    <para>API version not supported</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>2101</para>
                  </entry>
                  <entry>
                    <para>Invalid JSON</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>2102</para>
                  </entry>
                  <entry>
                    <para>Method not supported</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>2103</para>
                  </entry>
                  <entry>
                    <para>Required parameter missing</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>2104</para>
                  </entry>
                  <entry>
                    <para>Invalid parameter value specified</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>2105</para>
                  </entry>
                  <entry>
                    <para>Authorization failed</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>2106</para>
                  </entry>
                  <entry>
                    <para>Authentication failed</para>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </section>
      </section>
      <section xml:id="section_iyt_v12_v5b">
        <title>SDP answer</title>
        <para>An SDP answer is always sent from the client to the device. Note that the contents of
            <code>params</code> map directly to the contents of the
            <code>RTCSessionDescription</code> interface described in the W3C WebRTC
          Specification.</para>
        <para><emphasis role="bold">Client sends <code>setSdpAnswer</code> to device, via server</emphasis></para>
         <para>This message contains the SDP answer from the client to the device.</para>
        <para><emphasis role="bold">Device sends <code>setSdpAnswerAck</code> to client, via server</emphasis></para>
        <para>A device MUST send a response back to the client after validating the message.
          This message indicates that the device has successfully validated the <code>setSdpAnswer</code> request.</para>
        <section>
          <title>Faults</title>
          <para>The following errors can be set in the <code>setSdpAnswer</code> or <code>setSdpAnswerAck</code> messages.
            See section <xref linkend="section_myt_v12_v5b"/> for more details on errors.</para>
          <informaltable>
            <tgroup cols="2">
              <colspec colnum="1" colname="col1" colwidth="1*"/>
              <colspec colnum="2" colname="col2" colwidth="4*"/>
              <thead>
                <row>
                  <entry>
                    <para>Code</para>
                  </entry>
                  <entry>
                    <para>Description</para>
                  </entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry>
                    <para>1100</para>
                  </entry>
                  <entry>
                    <para>Internal error</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>1101</para>
                  </entry>
                  <entry>
                    <para>Temporarily unavailable</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>2100</para>
                  </entry>
                  <entry>
                    <para>API version not supported</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>2101</para>
                  </entry>
                  <entry>
                    <para>Invalid JSON</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>2102</para>
                  </entry>
                  <entry>
                    <para>Method not supported</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>2103</para>
                  </entry>
                  <entry>
                    <para>Required parameter missing</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>2104</para>
                  </entry>
                  <entry>
                    <para>Invalid parameter value specified</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>2105</para>
                  </entry>
                  <entry>
                    <para>Authorization failed</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>2106</para>
                  </entry>
                  <entry>
                    <para>Authentication failed</para>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </section>
      </section>
      <section xml:id="section_jyt_v12_v5b">
        <title>ICE candidates</title>
        <para>Both client and device produce ICE candidates and send them to each other (in any order) using an
            <code>addIceCandidate</code> message.</para>
        <para>
          <note>
            <para>Note that ICE candidates can arrive BEFORE the SDP offer and the implementing client
              needs to handle this.</para>
          </note>
        </para>
        <para>Note that the contents of <code>params</code> map directly to the contents of the
            <code>RTCIceCandidate</code> interface described in the W3C WebRTC Specification.</para>
        <section xml:id="section_kyt_v12_v5b">
          <title>addIceCandidate</title>
          <para><emphasis role="bold">Device sends <code>addIceCandidateFromDevice</code> to client, via server</emphasis></para>
          <para>This message requests the client to add a remote ICE candidate originating from the device.</para>
          <para><emphasis role="bold">Client sends <code>addIceCandidateFromDeviceAck</code> to device, via server</emphasis></para>
          <para>This message acknowledges that the client has successfully validated ICE candidate from the device.</para>
          <para><emphasis role="bold">Client sends <code>addIceCandidateFromClient</code> to device, via server</emphasis></para>
          <para>This message requests the device to add a remote ICE candidate originating from the client.</para>
          <para><emphasis role="bold">Device sends <code>addIceCandidateFromClientAck</code> to client, via server</emphasis></para>
          <para>This message acknowledges that the device has successfully validated ICE candidate from the client.</para>
          <para><?oxy_comment_start author="FredrikS" timestamp="20220920T182321+0200" comment="Client can terminate the WebSocket connection after P2P is established? RTCP is used as keep-alive"?>If
            everything works as it should, a peer-to-peer WebRTC session can be set up between
            client and device using the above messages.<?oxy_comment_end?></para>
          <section>
            <title>Faults</title>
            <para>The following errors can be set in the <code>addIceCandidateFromDeviceAck</code>
              or the <code>addIceCandidateFromClientAck</code> messages.
              See section <xref linkend="section_myt_v12_v5b"/> for more details on errors.</para>
            <informaltable>
              <tgroup cols="2">
                <colspec colnum="1" colname="col1" colwidth="1*"/>
                <colspec colnum="2" colname="col2" colwidth="4*"/>
                <thead>
                  <row>
                    <entry>
                      <para>Code</para>
                    </entry>
                    <entry>
                      <para>Description</para>
                    </entry>
                  </row>
                </thead>
                <tbody>
                  <row>
                    <entry>
                      <para>1100</para>
                    </entry>
                    <entry>
                      <para>Internal error</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>1101</para>
                    </entry>
                    <entry>
                      <para>Temporarily unavailable</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>2100</para>
                    </entry>
                    <entry>
                      <para>API version not supported</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>2101</para>
                    </entry>
                    <entry>
                      <para>Invalid JSON</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>2102</para>
                    </entry>
                    <entry>
                      <para>Method not supported</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>2103</para>
                    </entry>
                    <entry>
                      <para>Required parameter missing</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>2104</para>
                    </entry>
                    <entry>
                      <para>Invalid parameter value specified</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>2105</para>
                    </entry>
                    <entry>
                      <para>Authorization failed</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>2106</para>
                    </entry>
                    <entry>
                      <para>Authentication failed</para>
                    </entry>
                  </row>
                </tbody>
              </tgroup>
            </informaltable></section>
        </section>
      </section>
    </section>
    <section xml:id="section_myt_v12_v5b">
      <title>Error handling</title>
      <para>Errors that can be immediately reported when receiving a request are reported directly
        in its corresponding response. However, errors may also occur later during the subsequent
        session setup or after it has been setup and is running. These types of errors are reported
        in an <code>event</code> message. Both 'events' and 'responses' include a numeric error
        code, and a human-readable message.</para>
      <informaltable>
        <tgroup cols="2">
          <colspec colnum="1" colname="col1" colwidth="1*"/>
          <colspec colnum="2" colname="col2" colwidth="4*"/>
          <thead>
            <row>
              <entry>
                <para>Code</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <para>1100</para>
              </entry>
              <entry>
                <para>Internal error</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>1101</para>
              </entry>
              <entry>
                <para>Temporarily unavailable</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>1200</para>
              </entry>
              <entry>
                <para>Media streaming failed, audio from client to device</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>1201</para>
              </entry>
              <entry>
                <para>Media streaming failed, connection to upstream source lost</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>2100</para>
              </entry>
              <entry>
                <para>API version not supported</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>2101</para>
              </entry>
              <entry>
                <para>Invalid JSON</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>2102</para>
              </entry>
              <entry>
                <para>Method not supported</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>2103</para>
              </entry>
              <entry>
                <para>Required parameter missing</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>2104</para>
              </entry>
              <entry>
                <para>Invalid parameter value specified</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>2105</para>
              </entry>
              <entry>
                <para>Authorization failed</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>2106</para>
              </entry>
              <entry>
                <para>Authentication failed</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
      <para>When errors are reported by the client or device the <code>error</code> message is
        encapsulated in a <code>signaling</code> message. The server may itself send errors by using
        its own <code>error</code> type message.</para>
      <section xml:id="section_nyt_v12_v5b">
        <title>Device error response</title>
        <para>Below is an example error response to an <code>initSession</code> request.</para>
        <para><emphasis role="bold">Sent from device, to client via server:</emphasis></para>
        <para>
          <programlisting><code>{
    "type":"signaling",
    "targetId":"my_camera",
    "orgId":"59bda79d-fb39-0e03-41a2-98f204b35f51",
    "data":{
        "apiVersion": "1.0",
        "type": "response",
        "sessionId": "948dd272-f56b-416f-b349-fa1e88578b7c",
        "method": "initSession",
        "context": "ee4b07f4-1890-41db-b368-66b246c54fb3",
        "error": {
            "code": 2103,
            "message": "Required parameter(s) missing: 'sessionId'"
        }
    }
}</code></programlisting>
        </para>
      </section>
      <section xml:id="section_oyt_v12_v5b">
        <title>Client error response</title>
        <para>Below is an example error response to a <code>addIceCandidate</code> request.</para>
        <para><emphasis role="bold">Sent from client, to device via server:</emphasis></para>
        <para>
          <programlisting><code>{
    "type":"signaling",
    "targetId":"my_camera",
    "orgId":"59bda79d-fb39-0e03-41a2-98f204b35f51",    
    "data":{
        "apiVersion": "1.0",
        "type": "response",
        "sessionId": "948dd272-f56b-416f-b349-fa1e88578b7c",
        "method": "addIceCandidate",
        "context": "ee4b07f4-1890-41db-b368-66b246c54fb3",
        "error": {
            "code": 2103,
            "message": "Required parameter(s) missing: 'candidate'"
        }
    }
}</code></programlisting>
        </para>
      </section>
      <section xml:id="section_pyt_v12_v5b">
        <title>Runtime error</title>
        <para>Below is an example runtime event error reported by the device.</para>
        <para><emphasis role="bold">Sent from device, to client via server</emphasis>:</para>
        <para>
          <programlisting><code>{
    "type":"signaling",
    "targetId":"my_camera",
    "orgId":"59bda79d-fb39-0e03-41a2-98f204b35f51",
    "data":{
        "apiVersion": "1.0",
        "type": "event",
        "sessionId": "948dd272-f56b-416f-b349-fa1e88578b7c",
        "error": {
            "code": 1100,
            "message": "Media streaming failure",
            "details": {}
        }
    }
}</code></programlisting>
        </para>
      </section>
      <section xml:id="section_qyt_v12_v5b">
        <title>Server error response</title>
        <para>Below is an example response for using an invalid <code>targetID</code> during an
            <code>initSession</code> request.</para>
        <para>
          <note>
            <para>Note that server errors use different error codes than client and device.</para>
          </note>
        </para>
        <para><emphasis role="bold">Sent from server, to client:</emphasis></para>
        <programlisting><code>{
    "type":"error",
    "targetId":"my_camera",
    "orgId":"bac02553-eea8-6b52-f369-ac109333091",
    "correlationId":"bd11c7e1-43ab-408c-b91a-e6c7a026ee3b",
    "code":"DISCONNECTED",
    "reason":"Target is not connected"
}</code></programlisting>
        <para>Below is another example response to an <code>initSession</code> message with an
          authorization error.</para>
        <para><emphasis role="bold">Sent from server, to client:</emphasis></para>
        <para>
          <programlisting><code>{
    "type":"error",
    "targetId":"my_camera",
    "orgId":"59bda79d-fb39-0e03-41a2-98f204b35f51",
    "correlationId":"481d4ece-ebd2-4184-b825-b7f962d8dd0c",
    "code":"UNAUTHORIZED",
    "reason":"You are not allowed to access the resource my_camera"
}</code></programlisting>
        </para>
      </section>
    </section>
    <section xml:id="section_fks_5rk_v5b">
      <title>Reconnecting</title>
      <para>If a
        <?oxy_comment_start author="FredrikS" timestamp="20220920T175255+0200" comment="Also if the device disconnects"?>client
        is disconnected<?oxy_comment_end?> it's up to the client to reconnect again using the same
        procedure as was used initially, i.e. start from scratch. Each client should use an
        individual ascending interval strategy to avoid that all clients reconnect at the same
        time.</para>
    </section>
  </chapter>
  <chapter xml:id="chapter_uyt_v12_v5b">
    <title>WebRTC Usage</title>
    <para>This chapter describes ONVIF specific usage of WebRTC regarding how to send data between
      the client and device on the peer-to-peer connection.</para>
    <para>Devices MAY define profiles for different streaming scenarios that can be choosen by the
      client based on the available bandwidth or other limiting factors. For example, a specific
      profile for mobile clients, another one for high quality streaming, etc.</para>
    <section xml:id="section_vyt_v12_v5b">
      <title>Video</title>
      <para>When using WebRTC with a web browser only certain codecs will work. Because of this
        ONVIF recommends to use the h.264 codec.</para>
    </section>
    <section xml:id="section_wyt_v12_v5b">
      <title>Audio</title>
      <para>When using WebRTC with a web browser only certain codecs will work. Because of this
        ONVIF recommends to use the Opus or PCMU codec.</para>
    </section>
    <section xml:id="section_xyt_v12_v5b">
      <title>Metadata</title>
      <para>A device could send event and analytics metadata on a WebRTC datachannel. This is not
        covered in the this version of this specifcation but may be added in future versions.</para>
    </section>
    <section xml:id="section_yyt_v12_v5b">
      <title>Commands</title>
      <para>A client could send PTZ and other commands on a WebRTC datachannel. This is not covered
        in the this version of this specifcation but may be added in future versions.</para>
    </section>
  </chapter>
  <chapter xml:id="chapter_ryt_v12_v5b">
    <title>Directory Protocol</title>
    <para>The Directory Protocol is used to query organizations, devices and profiles in a
      directory.</para>
    <section xml:id="section_syt_v12_v5b">
      <title>Listing organizations</title>
      <para>List organizations that are accessible by the user. </para>
      <para>...</para>
    </section>
    <section xml:id="section_tyt_v12_v5b">
      <title>Listing devices</title>
      <para>List devices that are accessible by the user.</para>
      <para>...</para>
    </section>
    <section xml:id="section_bwp_r2k_v5b">
      <title>Listing profiles</title>
      <para>List streaming profiles together with video and audio settings.</para>
      <para>...</para>
    </section>
  </chapter>
  <chapter xml:id="chapter_cwp_r2k_v5b">
    <title>Login Protocol</title>
    <para>The Login Protocol is used to authenticate the user and get access to services.</para>
    <section xml:id="section_dwp_r2k_v5b">
      <title>Get access token</title>
      <para>...</para>
    </section>
  </chapter>
  <appendix role="revhistory">
    <title>Revision History</title>
    <para/>
  </appendix>
</book>
